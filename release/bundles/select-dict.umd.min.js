!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("rxjs/Subject"),require("@angular/common/http"),require("lodash/array"),require("lodash/lang"),require("lodash/object"),require("rxjs/add/operator/map"),require("rxjs/add/operator/toPromise"),require("@angular/forms"),require("@angular/common")):"function"==typeof define&&define.amd?define(["exports","@angular/core","rxjs/Subject","@angular/common/http","lodash/array","lodash/lang","lodash/object","rxjs/add/operator/map","rxjs/add/operator/toPromise","@angular/forms","@angular/common"],t):t(e["select-dict"]={},e.ng.core,e.Rx,e.ng.common.http,e.array,e.lang,e.object,e.Rx.Observable.prototype,e.Rx.Observable.prototype,e.ng.forms,e.ng.common)}(this,function(e,t,n,i,o,r,s,c,a,p,l){"use strict";var h=function(){function e(e,t){this.el=e,this.renderer=t}return e.prototype.ngAfterViewInit=function(){},e.prototype.ngOnChanges=function(e){e.appHighlightChoice&&e.appHighlightChoice.currentValue?this.renderer.addClass(this.el.nativeElement,"highlighted"):this.renderer.removeClass(this.el.nativeElement,"highlighted")},e}();h.decorators=[{type:t.Directive,args:[{selector:"[appHighlightChoice]"}]}],h.ctorParameters=function(){return[{type:t.ElementRef},{type:t.Renderer2}]},h.propDecorators={appHighlightChoice:[{type:t.Input}]};var d=function(){function e(){}return e.prototype.transform=function(e,t,n){return e.filter(function(e){return-1!==e[t].toLowerCase().indexOf(n.toLowerCase())})},e}();d.decorators=[{type:t.Pipe,args:[{name:"selectDict"}]}],d.ctorParameters=function(){return[]};var u=function(){function e(e){this.el=e}return e.prototype.ngAfterViewInit=function(){var e=this;this.focus.subscribe(function(){setTimeout(function(){return e.el.nativeElement.focus()})})},e}();u.decorators=[{type:t.Directive,args:[{selector:"[appSelectMatch]"}]}],u.ctorParameters=function(){return[{type:t.ElementRef}]},u.propDecorators={focus:[{type:t.Input}]};var g=function(){function e(e){this.ref=e,this.onSelect=new t.EventEmitter,this.nextPage=new t.EventEmitter,this.prevPage=new t.EventEmitter}return e.prototype.ngOnInit=function(){this.dropDownMenuElem=this.ref.nativeElement.querySelector(".dropdown-menu")},e.prototype.selectItem=function(e,t){this.onSelect.emit({$event:e,item:t})},e.prototype._ensureHighlightVisible=function(){var e=this.dropDownMenuElem.querySelectorAll(".choice");if(e.length){var t;if("prevPage"===this.activeIndex)t=this.dropDownMenuElem.querySelector(".previous-page");else if("nextPage"===this.activeIndex)t=this.dropDownMenuElem.querySelector(".next-page");else{if(-1===this.activeIndex)return void this.scrollToTop();t=e[this.activeIndex]}var n=t.offsetTop+t.clientHeight-this.dropDownMenuElem.scrollTop,i=this.dropDownMenuElem.offsetHeight;n>i?this.dropDownMenuElem.scrollTop+=n-i:n<t.clientHeight&&(0===this.activeIndex?this.dropDownMenuElem.scrollTop=0:this.dropDownMenuElem.scrollTop-=t.clientHeight-n)}},e.prototype.scrollToTop=function(){this.dropDownMenuElem.scrollTop=0},e.prototype.trackByDictionary=function(e,t){return t?t[this.indexBy]:null},e.prototype.getNextPage=function(){this.nextPage.emit()},e.prototype.getPrevPage=function(){this.prevPage.emit()},e.prototype.ngOnChanges=function(e){var t=this;e.activeIndex&&e.choices?setTimeout(function(){return t._ensureHighlightVisible()}):e.activeIndex&&!e.choices&&this._ensureHighlightVisible()},e.prototype.ngAfterViewChecked=function(){},e.prototype.ngDoCheck=function(){},e}();g.decorators=[{type:t.Component,args:[{selector:"app-select-dict-choices",template:'<div class="dropdown-menu show"\n     style="position: absolute;\n       transform: translate3d(0, 38px, 0);\n       top: 0;\n       left: 0;\n       will-change: transform;">\n  <a class="dropdown-item previous-page"\n     [ngClass]="{\'highlighted\':this.activeIndex === \'prevPage\'}"\n     [hidden]="!showPreviousPageButton"\n     (click)="getPrevPage()"><<<</a>\n  <a class="dropdown-item choice hide-overflowed-text"\n     [appHighlightChoice]="i === activeIndex"\n     *ngFor="let item of choices; trackBy: trackByDictionary; let i = index"\n     (click)="selectItem($event, item)">\n    <ng-template\n      [ngTemplateOutlet]="template"\n      [ngTemplateOutletContext]="{$implicit: item}">\n    </ng-template>\n  </a>\n  <a class="dropdown-item next-page"\n     [hidden]="!showNextPageButton"\n     [ngClass]="{\'highlighted\':this.activeIndex === \'nextPage\'}"\n     (click)="getNextPage()">>>></a>\n</div>\n',styles:[":host(.sm) .dropdown-menu{\n  font-size:0.875rem;\n  line-height:1.5;\n}\n\n:host(.sm) .dropdown-item{\n  padding:0.25rem 0.75rem;\n}\n\n:host(.active){\n  border-width:3px;\n}\n\n:host{\n  display:block;\n}\n\n.dropdown-menu{\n  width:100%;\n  max-height:200px;\n  margin-bottom:10px;\n  overflow-y:auto;\n  padding:0.2rem 0;\n}\n\n.dropdown-item{\n  padding:0.5rem 0.75rem;\n  cursor:pointer;\n  overflow-x:hidden;\n}\n\n.dropdown-item:active{\n  color:white !important;\n}\n\n.dropdown-item.highlighted, .dropdown-item.highlighted:hover{\n  background-color:#007bff;\n  color:#fff !important;\n}\n"]}]}],g.ctorParameters=function(){return[{type:t.ElementRef}]},g.propDecorators={template:[{type:t.Input}],choices:[{type:t.Input}],active:[{type:t.Input}],activeIndex:[{type:t.Input}],showNextPageButton:[{type:t.Input}],showPreviousPageButton:[{type:t.Input}],search:[{type:t.Input}],indexBy:[{type:t.Input}],onSelect:[{type:t.Output}],nextPage:[{type:t.Output}],prevPage:[{type:t.Output}]};var m=function(){function e(e){this.el=e}return e.prototype.ngAfterViewInit=function(){var e=this;this.focus&&(this.focusElement(),this.focus.subscribe(function(){return e.focusElement()}))},e.prototype.focusElement=function(){var e=this;setTimeout(function(){return e.el.nativeElement.focus()})},e}();m.decorators=[{type:t.Directive,args:[{selector:"[appSelectSearch]"}]}],m.ctorParameters=function(){return[{type:t.ElementRef}]},m.propDecorators={focus:[{type:t.Input}]};var f=function(){function e(e){this.http=e}return e.prototype.getPage=function(e,t){var n={withCredentials:!0,params:t};return this.http.get(e,n)},e}();f.decorators=[{type:t.Injectable}],f.ctorParameters=function(){return[{type:i.HttpClient}]};var v=function(){function e(e,t){this.eRef=e,this.dictService=t,this.indexBy="id",this.filterBy="name",this.dictFilter=new d,this.focusMatch=new n.Subject,this.focusSearch=new n.Subject,this.items=[],this._items=[],this.active=null,this.activeIndex=-1,this.initialQuery=!0,this.longList=!1,this.listSize=50,this.page=0,this.allInMemory=!1,this.opened=!1,this.propagateChange=function(e){}}return e.prototype.clickHandler=function(e){!this.eRef.nativeElement.querySelector(".select-dict").contains(e.target)&&this.opened&&this.onClose()},e.prototype.ngOnInit=function(){},e.prototype.onSelect=function(e){this.selected=e.item,this.propagateChange(this.selected),this.onClose()},e.prototype.onOpen=function(e){this.opened=!0,this.active=this.selected,this.request()},e.prototype.onClose=function(){this.opened=!1,this.resetComponent()},e.prototype.resetComponent=function(){this.items=[],this.active=null,this.activeIndex=-1,this.page=0,this.search="",this.focusMatch.next()},e.prototype.onClear=function(){},e.prototype.onSearch=function(e){this.search!==e&&(this.search=e,this.searchItem())},e.prototype.searchItem=function(){this.page=0,this.needToLoadData()?this.request():(this.items=this.dictFilter.transform(this._items,this.filterBy,this.search),this.active?this.activeIndex=this.getActiveIndex():this.activeIndex=-1)},e.prototype.selectHighlighted=function(){"prevPage"===this.activeIndex?this.getPrevPage():"nextPage"===this.activeIndex?this.getNextPage():this.onSelect({$event:null,item:this.active})},e.prototype.activateNext=function(){this.setActiveItem("next")},e.prototype.activatePrev=function(){this.setActiveItem("prev")},e.prototype.request=function(){var e=this,t=(n={},n[this.filterBy]=this.search?this.search:"",n.count=this.listSize,n.from=this.page*this.listSize,n);return s.assign(t,this.options),this.dictService.getPage(this.url,t).subscribe(function(n){e.initialQuery&&(e.initialQuery=!1,e.longList=n.total<0||n.total>n.size),e._items=n.list,e.items=r.cloneDeep(e._items),e.lastRemoteSearch=t[e.filterBy],e.allInMemory=0===e.page&&n.size<e.listSize,e.activeIndex=e.active?e.getActiveIndex():-1,e.choicesComponent.scrollToTop(),e.choicesComponent._ensureHighlightVisible()});var n},e.prototype.getNextPage=function(){this.page++,this.focusSearch.next(),this.request()},e.prototype.getPrevPage=function(){this.page--,this.focusSearch.next(),this.request()},e.prototype.setActiveItem=function(e){var t=this.items.length;-1===this.activeIndex?this.longList&&0!==this.page?this.activeIndex="prevPage":t&&(this.activeIndex=0):"prev"===e?"string"!=typeof this.activeIndex?0!==this.activeIndex?this.activeIndex--:this.longList&&0!==this.page&&(this.activeIndex="prevPage"):"nextPage"===this.activeIndex&&(this.activeIndex=t-1):"string"!=typeof this.activeIndex?this.activeIndex!==t-1?this.activeIndex++:!this.longList||t<this.listSize||(this.activeIndex="nextPage"):"prevPage"===this.activeIndex&&(this.activeIndex=0),this.active=-1!==this.activeIndex&&"string"!=typeof this.activeIndex?this.items[this.activeIndex]:null},e.prototype.getActiveIndex=function(){var e=this;return o.findIndex(this.items,function(t){return t[e.indexBy]===e.active[e.indexBy]})},e.prototype.writeValue=function(e){this.selected=e},e.prototype.registerOnChange=function(e){this.propagateChange=e},e.prototype.registerOnTouched=function(){},e.prototype.needToLoadData=function(){return!!this.longList&&(!this.allInMemory||-1===this.search.indexOf(this.lastRemoteSearch))},e}();v.decorators=[{type:t.Component,args:[{selector:"app-select-dict",template:'<div *ngIf="label" class="form-group">\n  <label>{{label}}</label>\n  <div class="select-dict dropdown">\n    <div class="form-control dropdown-toggle hide-overflowed-text"\n         [ngClass]="size === \'sm\' ? \'form-control-sm\' : \'\'"\n         tabindex="0"\n         appSelectMatch\n         [focus]="focusMatch"\n         [hidden]="opened"\n         (keydown.enter)="onOpen()"\n         (click)="onOpen($event)">\n      <ng-template *ngIf="selected"\n                   [ngTemplateOutlet]="matchTemplate"\n                   [ngTemplateOutletContext]="{$implicit: selected}">\n      </ng-template>\n      <span *ngIf="!selected">{{placeholder || label}}</span>\n    </div>\n    <input\n      *ngIf="opened"\n      #searchInput\n      class="form-control search-input"\n      [ngClass]="size === \'sm\' ? \'form-control-sm\' : \'\'"\n      appSelectSearch\n      [focus]="focusSearch"\n      (keyup)="onSearch(searchInput.value)"\n      (keydown.enter)="selectHighlighted()"\n      (keydown.arrowup)="activatePrev()"\n      (keydown.arrowdown)="activateNext()">\n    <app-select-dict-choices\n      *ngIf="opened"\n      [choices]="items"\n      [indexBy]="indexBy"\n      [search]="search"\n      [showPreviousPageButton]="longList && page !== 0"\n      [showNextPageButton]="longList && !(items?.length < listSize)"\n      [active]="active"\n      [activeIndex]="activeIndex"\n      [template]="choicesTemplate"\n      (onSelect)="onSelect($event)"\n      (nextPage)="getNextPage()"\n      (prevPage)="getPrevPage()"\n    ></app-select-dict-choices>\n  </div>\n</div>\n<div *ngIf="label === undefined || label === null" class="select-dict dropdown">\n  <div class="form-control dropdown-toggle hide-overflowed-text"\n       [ngClass]="size === \'sm\' ? \'form-control-sm\' : \'\'"\n       tabindex="0"\n       appSelectMatch\n       [focus]="focusMatch"\n       [hidden]="opened"\n       (keydown.enter)="onOpen()"\n       (click)="onOpen($event)">\n    <ng-template *ngIf="selected"\n                 [ngTemplateOutlet]="matchTemplate"\n                 [ngTemplateOutletContext]="{$implicit: selected}">\n    </ng-template>\n    <div class="placeholder" *ngIf="!selected">{{placeholder || label}}</div>\n  </div>\n  <input\n    *ngIf="opened"\n    #searchInput\n    class="form-control search-input"\n    [ngClass]="size === \'sm\' ? \'form-control-sm\' : \'\'"\n    appSelectSearch\n    [focus]="focusSearch"\n    (keyup)="onSearch(searchInput.value)"\n    (keydown.enter)="selectHighlighted()"\n    (keydown.arrowup)="activatePrev()"\n    (keydown.arrowdown)="activateNext()">\n  <app-select-dict-choices\n    [ngClass]="size === \'sm\' ? \'sm\' : \'\'"\n    *ngIf="opened"\n    [choices]="items"\n    [indexBy]="indexBy"\n    [search]="search"\n    [showPreviousPageButton]="longList && page !== 0"\n    [showNextPageButton]="longList && !(items?.length < listSize)"\n    [active]="active"\n    [activeIndex]="activeIndex"\n    [template]="choicesTemplate"\n    (onSelect)="onSelect($event)"\n    (nextPage)="getNextPage()"\n    (prevPage)="getPrevPage()"\n  ></app-select-dict-choices>\n</div>\n',styles:[".select-dict div.form-control{\n  cursor:pointer;\n  padding-right:38px;\n  overflow-x:hidden;\n}\n\n.select-dict .dropdown-toggle:after{\n  position:absolute;\n  top:50%;\n  right:15px;\n  -webkit-transform:translateY(-50%);\n          transform:translateY(-50%);\n}\n\n.select-dict .hide-overflowed-text{\n  overflow-x:hidden;\n  text-overflow:ellipsis;\n  white-space:nowrap;\n}\n\n.placeholder{\n  height:1.3rem;\n}\n"],providers:[{provide:p.NG_VALUE_ACCESSOR,useExisting:t.forwardRef(function(){return v}),multi:!0}]}]}],v.ctorParameters=function(){return[{type:t.ElementRef},{type:f}]},v.propDecorators={selected:[{type:t.Input}],url:[{type:t.Input}],indexBy:[{type:t.Input}],filterBy:[{type:t.Input}],label:[{type:t.Input}],placeholder:[{type:t.Input}],options:[{type:t.Input}],size:[{type:t.Input}],matchTemplate:[{type:t.ContentChild,args:["selectMatch"]}],choicesTemplate:[{type:t.ContentChild,args:["selectChoices"]}],choicesComponent:[{type:t.ViewChild,args:[g]}],clickHandler:[{type:t.HostListener,args:["document:click",["$event"]]}]};var y=function(){return function(){}}();y.decorators=[{type:t.NgModule,args:[{imports:[l.CommonModule,i.HttpClientModule,p.ReactiveFormsModule,p.FormsModule],declarations:[v,m,g,u,d,h],providers:[f],exports:[v]}]}],y.ctorParameters=function(){return[]},e.SelectDictModule=y,e.SelectDictComponent=v,e.SelectDictService=f,e.ɵe=h,e.ɵa=g,e.ɵd=d,e.ɵc=u,e.ɵb=m,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=select-dict.umd.min.js.map
