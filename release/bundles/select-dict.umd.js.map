{
  "version": 3,
  "file": "select-dict.umd.js",
  "sources": [
    "ng://select-dict/out/select-dict.component.ts",
    "ng://select-dict/out/select-dict.service.ts",
    "ng://select-dict/out/select-search.directive.ts",
    "ng://select-dict/out/select-dict-choices/select-dict-choices.component.ts",
    "ng://select-dict/out/select-match.directive.ts",
    "ng://select-dict/out/select-dict.pipe.ts",
    "ng://select-dict/out/select-dict-choices/highlight-choice.directive.ts"
  ],
  "sourcesContent": [
    "import {Component, ContentChild, ElementRef, forwardRef, HostListener, Input, OnInit, ViewChild} from '@angular/core';\nimport {findIndex} from 'lodash/array';\nimport {cloneDeep} from 'lodash/lang';\nimport {assign} from 'lodash/object'\n\nimport {Subject} from 'rxjs/Subject';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise'\nimport {SelectDictChoicesComponent} from './select-dict-choices/select-dict-choices.component';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {SelectDictPipe} from './select-dict.pipe';\nimport {Subscription} from 'rxjs/Subscription';\nimport {SelectDictService} from './select-dict.service';\n\nexport interface IDictListContainer {\n  total: number;\n  size: number;\n  list: any[]\n}\n\n@Component({\n  selector: 'app-select-dict',\n  template: `<div *ngIf=\"label\" class=\"form-group\">\n  <label>{{label}}</label>\n  <div class=\"select-dict dropdown\">\n    <div class=\"form-control dropdown-toggle hide-overflowed-text\"\n         [ngClass]=\"size === 'sm' ? 'form-control-sm' : ''\"\n         tabindex=\"0\"\n         appSelectMatch\n         [focus]=\"focusMatch\"\n         [hidden]=\"opened\"\n         (keydown.enter)=\"onOpen()\"\n         (click)=\"onOpen($event)\">\n      <ng-template *ngIf=\"selected\"\n                   [ngTemplateOutlet]=\"matchTemplate\"\n                   [ngTemplateOutletContext]=\"{$implicit: selected}\">\n      </ng-template>\n      <span *ngIf=\"!selected\">{{placeholder || label}}</span>\n    </div>\n    <input\n      *ngIf=\"opened\"\n      #searchInput\n      class=\"form-control search-input\"\n      [ngClass]=\"size === 'sm' ? 'form-control-sm' : ''\"\n      appSelectSearch\n      [focus]=\"focusSearch\"\n      (keyup)=\"onSearch(searchInput.value)\"\n      (keydown.enter)=\"selectHighlighted()\"\n      (keydown.arrowup)=\"activatePrev()\"\n      (keydown.arrowdown)=\"activateNext()\">\n    <app-select-dict-choices\n      *ngIf=\"opened\"\n      [choices]=\"items\"\n      [indexBy]=\"indexBy\"\n      [search]=\"search\"\n      [showPreviousPageButton]=\"longList && page !== 0\"\n      [showNextPageButton]=\"longList && !(items?.length < listSize)\"\n      [active]=\"active\"\n      [activeIndex]=\"activeIndex\"\n      [template]=\"choicesTemplate\"\n      (onSelect)=\"onSelect($event)\"\n      (nextPage)=\"getNextPage()\"\n      (prevPage)=\"getPrevPage()\"\n    ></app-select-dict-choices>\n  </div>\n</div>\n<div *ngIf=\"label === undefined || label === null\" class=\"select-dict dropdown\">\n  <div class=\"form-control dropdown-toggle hide-overflowed-text\"\n       [ngClass]=\"size === 'sm' ? 'form-control-sm' : ''\"\n       tabindex=\"0\"\n       appSelectMatch\n       [focus]=\"focusMatch\"\n       [hidden]=\"opened\"\n       (keydown.enter)=\"onOpen()\"\n       (click)=\"onOpen($event)\">\n    <ng-template *ngIf=\"selected\"\n                 [ngTemplateOutlet]=\"matchTemplate\"\n                 [ngTemplateOutletContext]=\"{$implicit: selected}\">\n    </ng-template>\n    <div class=\"placeholder\" *ngIf=\"!selected\">{{placeholder || label}}</div>\n  </div>\n  <input\n    *ngIf=\"opened\"\n    #searchInput\n    class=\"form-control search-input\"\n    [ngClass]=\"size === 'sm' ? 'form-control-sm' : ''\"\n    appSelectSearch\n    [focus]=\"focusSearch\"\n    (keyup)=\"onSearch(searchInput.value)\"\n    (keydown.enter)=\"selectHighlighted()\"\n    (keydown.arrowup)=\"activatePrev()\"\n    (keydown.arrowdown)=\"activateNext()\">\n  <app-select-dict-choices\n    [ngClass]=\"size === 'sm' ? 'sm' : ''\"\n    *ngIf=\"opened\"\n    [choices]=\"items\"\n    [indexBy]=\"indexBy\"\n    [search]=\"search\"\n    [showPreviousPageButton]=\"longList && page !== 0\"\n    [showNextPageButton]=\"longList && !(items?.length < listSize)\"\n    [active]=\"active\"\n    [activeIndex]=\"activeIndex\"\n    [template]=\"choicesTemplate\"\n    (onSelect)=\"onSelect($event)\"\n    (nextPage)=\"getNextPage()\"\n    (prevPage)=\"getPrevPage()\"\n  ></app-select-dict-choices>\n</div>\n`,\n  styles: [`.select-dict div.form-control{\r\n  cursor:pointer;\r\n  padding-right:38px;\r\n  overflow-x:hidden;\r\n}\r\n\r\n.select-dict .dropdown-toggle:after{\r\n  position:absolute;\r\n  top:50%;\r\n  right:15px;\r\n  -webkit-transform:translateY(-50%);\r\n          transform:translateY(-50%);\r\n}\r\n\r\n.select-dict .hide-overflowed-text{\r\n  overflow-x:hidden;\r\n  text-overflow:ellipsis;\r\n  white-space:nowrap;\r\n}\r\n\r\n.placeholder{\r\n  height:1.3rem;\r\n}\r\n`],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => SelectDictComponent),\n      multi: true\n    }\n  ]\n})\nexport class SelectDictComponent implements OnInit, ControlValueAccessor {\n  @Input() selected;\n  @Input() url;\n  @Input() indexBy = 'id';\n  @Input() filterBy = 'name';\n  @Input() label: string;\n  @Input() placeholder: string;\n  @Input() options;\n  @Input() size: 'sm' | null;\n\n  dictFilter = new SelectDictPipe();\n\n  focusMatch = new Subject();\n  focusSearch = new Subject();\n\n  items: any[] = [];\n  _items: any[] = [];\n\n  search: string;\n  active = null;\n  activeIndex: 'nextPage' | 'prevPage' | number = -1;\n\n  initialQuery = true;\n  longList = false;\n  listSize = 50;\n  page = 0;\n  allInMemory = false;\n  lastRemoteSearch: string;\n\n  opened = false;\n\n  propagateChange = (_: any) => {\n  };\n\n  @ContentChild('selectMatch') matchTemplate;\n  @ContentChild('selectChoices') choicesTemplate;\n\n  @ViewChild(SelectDictChoicesComponent) choicesComponent: SelectDictChoicesComponent;\n\n  @HostListener('document:click', ['$event'])\n  clickHandler(event) {\n    let selectDictContainer = this.eRef.nativeElement.querySelector('.select-dict');\n    if (!selectDictContainer.contains(event.target) && this.opened) {\n      this.onClose();\n    }\n  }\n\n  constructor(private eRef: ElementRef, private dictService: SelectDictService) {\n  }\n\n  ngOnInit() {\n\n  }\n\n  onSelect($event) {\n    this.selected = $event.item;\n    this.propagateChange(this.selected);\n    this.onClose();\n  }\n\n  onOpen($event?) {\n    this.opened = true;\n    this.active = this.selected;\n    this.request();\n  }\n\n  onClose() {\n    this.opened = false;\n    this.resetComponent();\n  }\n\n  resetComponent() {\n    this.items = [];\n    this.active = null;\n    this.activeIndex = -1;\n    this.page = 0;\n    this.search = '';\n    this.focusMatch.next();\n  }\n\n  /*TODO create this functionality*/\n  onClear() {\n\n  }\n\n  onSearch(value: string) {\n    if (this.search !== value) {\n      this.search = value;\n      this.searchItem();\n    }\n  }\n\n  searchItem() {\n    this.page = 0;\n    if (this.needToLoadData()) this.request();\n    else {\n      this.items = this.dictFilter.transform(this._items, this.filterBy, this.search);\n      if (this.active) {\n        this.activeIndex = this.getActiveIndex();\n      }\n      else {\n        this.activeIndex = -1;\n      }\n    }\n  }\n\n  selectHighlighted() {\n    if (this.activeIndex === 'prevPage') {\n      this.getPrevPage();\n    }\n    else if (this.activeIndex === 'nextPage') {\n      this.getNextPage();\n    }\n    else {\n      this.onSelect({$event: null, item: this.active});\n    }\n  }\n\n  activateNext() {\n    this.setActiveItem('next');\n  }\n\n  activatePrev() {\n    this.setActiveItem('prev');\n  }\n\n  request(): Subscription {\n    let params = {\n      [this.filterBy]: this.search ? this.search : '',\n      count: this.listSize,\n      from: this.page * this.listSize\n    };\n\n    assign(params, this.options);\n\n    return this.dictService.getPage(this.url, params)\n      .subscribe((container: IDictListContainer) => {\n        if (this.initialQuery) {\n          this.initialQuery = false;\n          this.longList = container.total < 0 || container.total > container.size;\n        }\n        this._items = container.list;\n        this.items = cloneDeep(this._items);\n\n        this.lastRemoteSearch = <string>params[this.filterBy];\n        this.allInMemory = this.page === 0 && container.size < this.listSize;\n\n        this.activeIndex = this.active ? this.getActiveIndex() : -1;\n\n        this.choicesComponent.scrollToTop();\n        this.choicesComponent._ensureHighlightVisible();\n      });\n  }\n\n  getNextPage() {\n    this.page++;\n    this.focusSearch.next();\n    this.request();\n  }\n\n  getPrevPage() {\n    this.page--;\n    this.focusSearch.next();\n    this.request();\n  }\n\n  setActiveItem(direction: ('next' | 'prev')) {\n    let itemsLength = this.items.length;\n    if (this.activeIndex === -1) {\n      if (this.longList && this.page !== 0) {\n        this.activeIndex = 'prevPage';\n      }\n      else if (itemsLength) {\n        this.activeIndex = 0;\n      }\n    }\n    else {\n      // previous item\n      if (direction === 'prev') {\n        if (typeof this.activeIndex !== 'string') {\n          if (this.activeIndex !== 0) {\n            this.activeIndex--;\n          }\n          else if (this.longList && this.page !== 0) {\n            this.activeIndex = 'prevPage';\n          }\n        }\n        else if (this.activeIndex === 'nextPage') {\n          this.activeIndex = itemsLength - 1;\n        }\n      }\n      // next item\n      else {\n        if (typeof this.activeIndex !== 'string') {\n          if (this.activeIndex !== itemsLength - 1) {\n            this.activeIndex++;\n          }\n          // if next button available\n          else if (this.longList && !(itemsLength < this.listSize)) {\n            this.activeIndex = 'nextPage';\n          }\n        }\n        else if (this.activeIndex === 'prevPage') {\n          this.activeIndex = 0;\n        }\n      }\n    }\n\n    this.active = this.activeIndex !== -1 && typeof this.activeIndex !== 'string' ? this.items[this.activeIndex] : null;\n  }\n\n  getActiveIndex() {\n    return findIndex(this.items, item => item[this.indexBy] === this.active[this.indexBy]);\n  }\n\n  writeValue(value: any) {\n    this.selected = value;\n  }\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {\n  }\n\n  needToLoadData() {\n    if (this.longList) {\n      return !this.allInMemory || this.search.indexOf(this.lastRemoteSearch) === -1\n    }\n    return false;\n  };\n}\n",
    "import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {IDictListContainer} from './select-dict.component';\nimport {HttpClient} from '@angular/common/http';\n\nexport interface ISelectDictService {\n  getPage(dictionary_name: string, params?: any): Observable<IDictListContainer>\n}\n\n@Injectable()\nexport class SelectDictService implements ISelectDictService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  getPage(dictionary_name: string, params?: any) {\n    const options = {\n      withCredentials: true,\n      params\n    };\n    return <Observable<IDictListContainer>>this.http.get(dictionary_name, options)\n  }\n}\n",
    "import {AfterViewInit, Directive, ElementRef, Input} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\n\n@Directive({\n  selector: '[appSelectSearch]'\n})\nexport class SelectSearchDirective implements AfterViewInit {\n  @Input() focus: Subject<any>;\n\n  constructor(private el: ElementRef) {\n  }\n\n  ngAfterViewInit() {\n    if (!this.focus) return;\n    this.focusElement();\n    this.focus.subscribe(() => this.focusElement());\n  }\n\n  focusElement() {\n    setTimeout(() => this.el.nativeElement.focus())\n  }\n}\n",
    "import {\n  AfterViewChecked,\n  AfterViewInit, Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output,\n  TemplateRef\n} from '@angular/core';\n\n@Component({\n  selector: 'app-select-dict-choices',\n  template: `<div class=\"dropdown-menu show\"\n     style=\"position: absolute;\n       transform: translate3d(0, 38px, 0);\n       top: 0;\n       left: 0;\n       will-change: transform;\">\n  <a class=\"dropdown-item previous-page\"\n     [ngClass]=\"{'highlighted':this.activeIndex === 'prevPage'}\"\n     [hidden]=\"!showPreviousPageButton\"\n     (click)=\"getPrevPage()\"><<<</a>\n  <a class=\"dropdown-item choice hide-overflowed-text\"\n     [appHighlightChoice]=\"i === activeIndex\"\n     *ngFor=\"let item of choices; trackBy: trackByDictionary; let i = index\"\n     (click)=\"selectItem($event, item)\">\n    <ng-template\n      [ngTemplateOutlet]=\"template\"\n      [ngTemplateOutletContext]=\"{$implicit: item}\">\n    </ng-template>\n  </a>\n  <a class=\"dropdown-item next-page\"\n     [hidden]=\"!showNextPageButton\"\n     [ngClass]=\"{'highlighted':this.activeIndex === 'nextPage'}\"\n     (click)=\"getNextPage()\">>>></a>\n</div>\n`,\n  styles: [`:host(.sm) .dropdown-menu{\r\n  font-size:0.875rem;\r\n  line-height:1.5;\r\n}\r\n\r\n:host(.sm) .dropdown-item{\r\n  padding:0.25rem 0.75rem;\r\n}\r\n\r\n:host(.active){\r\n  border-width:3px;\r\n}\r\n\r\n:host{\r\n  display:block;\r\n}\r\n\r\n.dropdown-menu{\r\n  width:100%;\r\n  max-height:200px;\r\n  margin-bottom:10px;\r\n  overflow-y:auto;\r\n  padding:0.2rem 0;\r\n}\r\n\r\n.dropdown-item{\r\n  padding:0.5rem 0.75rem;\r\n  cursor:pointer;\r\n  overflow-x:hidden;\r\n}\r\n\r\n.dropdown-item:active{\r\n  color:white !important;\r\n}\r\n\r\n.dropdown-item.highlighted, .dropdown-item.highlighted:hover{\r\n  background-color:#007bff;\r\n  color:#fff !important;\r\n}\r\n`]\n})\nexport class SelectDictChoicesComponent implements OnChanges, OnInit, AfterViewChecked {\n  @Input() template: TemplateRef<any>;\n  @Input() choices: any[];\n  @Input() active: any;\n  @Input() activeIndex;\n  @Input() showNextPageButton: boolean;\n  @Input() showPreviousPageButton: boolean;\n  @Input() search;\n  @Input() indexBy;\n\n  @Output() onSelect = new EventEmitter();\n  @Output() nextPage = new EventEmitter();\n  @Output() prevPage = new EventEmitter();\n\n  dropDownMenuElem;\n\n  constructor(private ref: ElementRef) {\n\n  }\n\n  ngOnInit() {\n    this.dropDownMenuElem = this.ref.nativeElement.querySelector('.dropdown-menu');\n  }\n\n  selectItem($event, item) {\n    this.onSelect.emit({$event, item});\n  }\n\n  _ensureHighlightVisible() {\n    const choices = this.dropDownMenuElem.querySelectorAll('.choice');\n    if (!choices.length) return;\n    let highlightedChoice;\n    if (this.activeIndex === 'prevPage') {\n      highlightedChoice = this.dropDownMenuElem.querySelector('.previous-page');\n    }\n    else if (this.activeIndex === 'nextPage') {\n      highlightedChoice = this.dropDownMenuElem.querySelector('.next-page');\n    }\n    else if (this.activeIndex !== -1){\n      highlightedChoice = choices[this.activeIndex];\n    }\n    else {\n      this.scrollToTop();\n      return;\n    }\n\n    const posY = highlightedChoice.offsetTop + highlightedChoice.clientHeight - this.dropDownMenuElem.scrollTop;\n    const height = this.dropDownMenuElem.offsetHeight;\n\n    if (posY > height) {\n      this.dropDownMenuElem.scrollTop += posY - height;\n    } else if (posY < highlightedChoice.clientHeight) {\n      if (this.activeIndex === 0) {\n        this.dropDownMenuElem.scrollTop = 0; //To make group header visible when going all the way up\n      } else {\n        this.dropDownMenuElem.scrollTop -= highlightedChoice.clientHeight - posY;\n      }\n    }\n  }\n\n  scrollToTop() {\n    this.dropDownMenuElem.scrollTop = 0;\n  }\n\n  trackByDictionary(index, item) {\n    return item ? item[this.indexBy] : null;\n  }\n\n  getNextPage() {\n    this.nextPage.emit();\n  }\n\n  getPrevPage() {\n    this.prevPage.emit();\n  }\n\n  ngOnChanges(changesObj) {\n    if (changesObj.activeIndex && changesObj.choices) {\n      setTimeout(() => this._ensureHighlightVisible());\n    }\n    else if (changesObj.activeIndex && !changesObj.choices) {\n      this._ensureHighlightVisible();\n    }\n  }\n\n  ngAfterViewChecked() {\n\n  }\n\n  ngDoCheck() {\n\n  }\n}\n",
    "import {AfterViewInit, Directive, ElementRef, Input} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\n\n@Directive({\n  selector: '[appSelectMatch]'\n})\nexport class SelectMatchDirective implements AfterViewInit {\n  @Input() focus: Subject<any>;\n\n  constructor(private el: ElementRef) {\n  }\n\n  ngAfterViewInit() {\n    this.focus.subscribe(() => {\n      setTimeout(() => this.el.nativeElement.focus());\n    });\n  }\n}\n",
    "import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'selectDict'\n})\nexport class SelectDictPipe implements PipeTransform {\n\n  transform(value: any[], prop, search): any {\n    return value.filter((item) => item[prop].toLowerCase().indexOf(search.toLowerCase()) !== -1);\n  }\n\n}\n",
    "import {AfterViewInit, Directive, ElementRef, Input, OnChanges, Renderer2} from '@angular/core';\n\n@Directive({\n  selector: '[appHighlightChoice]'\n})\nexport class HighlightChoiceDirective implements AfterViewInit, OnChanges{\n  @Input() appHighlightChoice;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n  ngAfterViewInit() {\n\n  }\n\n  ngOnChanges(changes) {\n    if (changes.appHighlightChoice && changes.appHighlightChoice.currentValue) {\n      this.renderer.addClass(this.el.nativeElement, 'highlighted')\n    }\n    else {\n      this.renderer.removeClass(this.el.nativeElement, 'highlighted')\n    }\n  }\n}\n"
  ],
  "names": [
    "FormsModule",
    "NgModule",
    "HostListener",
    "ViewChild",
    "Input",
    "ElementRef",
    "forwardRef",
    "NG_VALUE_ACCESSOR",
    "Component",
    "HttpClient",
    "http",
    "EventEmitter",
    "Pipe",
    "Renderer2",
    "Directive"
  ],
  "mappings": "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"
}
